https://www.codingninjas.com/studio/problems/day-25-:-queue-using-stack_799482?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTab=1
import java.util.Stack;

public class Solution{
    static class Queue {
        // Define the data members(if any) here.

        // Add the elements in st
        // when input is for pop or top, if the st2 is empty
        // move the elements from st to st2
        // if st2 is not empty, top or pop from st2


        Stack<Integer> st;
        Stack<Integer> st2;

        Queue() {
            // Initialize your data structure here.
            st = new Stack<Integer>();
            st2 = new Stack<Integer>();
        }

        void enQueue(int val) {

            st.push(val);
            
        }

        int deQueue() {
            // Implement the dequeue() function.

            if(!st2.isEmpty()){
                return st2.pop();
            }else{
                while(!st.isEmpty()){
                    st2.push(st.pop());
                }
            }

            if(st2.isEmpty()){
                return -1;
            }

            return st2.pop();
        }

        int peek() {
            int ans = -1;

            if(!st2.isEmpty()){
                return st2.peek();
            }else{
                while(!st.isEmpty()){
                    st2.push(st.pop());
                }
            }

            if(st2.isEmpty()){
                return -1;
            }

            return st2.peek();
        }

        boolean isEmpty() {
            return st.isEmpty() && st2.isEmpty();
        }
    }
}
